<?php require('template/header.phtml') ?>

    <div class="container">
        <div class="row">
            <div class="col-12">
<!--                <h2>Doctor Schedule</h2>-->

                <!-- Debug information -->
<!--                <div class="alert alert-info">-->
<!--                    <strong>Debug Info:</strong>-->
<!--                    <br>Logged in user: --><?php //= htmlspecialchars($_SESSION['login'] ?? 'Not logged in') ?>
<!--                    <br>Number of shifts found: --><?php //= count($view->schedules ?? []) ?>
<!--                </div>-->

                <?php if (empty($view->schedules)): ?>
                    <div class="alert alert-warning">
                        No shifts scheduled. Contact your manager to schedule shifts.
                    </div>
                <?php else: ?>
                    <!-- Show raw data for debugging -->
<!--                    <details>-->
<!--                        <summary>Click to see raw schedule data (for debugging)</summary>-->
<!--                        <pre>--><?php //= htmlspecialchars(json_encode($view->schedules, JSON_PRETTY_PRINT)) ?><!--</pre>-->
<!--                    </details>-->
                <?php endif; ?>

                <!-- Filter Control -->
<!--                <div class="form-check mb-3">-->
<!--                    <input class="form-check-input" type="checkbox" id="showMyShifts">-->
<!--                    <label class="form-check-label" for="showMyShifts">-->
<!--                        Show only my shifts-->
<!--                    </label>-->
<!--                </div>-->

                <div id='calendar'></div>
            </div>
        </div>

        <!-- Legend for shift types -->
        <div class="row mt-3">
            <div class="col-12">
                <h5>Shift Types:</h5>
                <div class="d-flex gap-3">
                    <div><span class="badge shift-telemetry">ü©∫ Telemetry</span></div>
                    <div><span class="badge shift-consultant">üë®‚Äç‚öïÔ∏è Consultant</span></div>
                    <div><span class="badge shift-attending">üè• Attending</span></div>
                </div>
            </div>
        </div>

        <!-- Event Details Modal -->
        <div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eventModalLabel">Shift Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="eventModalBody">
                        <!-- Content will be populated by JavaScript -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="requestSwapBtn">Request Shift Swap</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.17/index.global.min.js'></script>
<!--    <style>-->
<!--        /* Custom FullCalendar CSS Variables for surgical customization */-->
<!--        :root {-->
<!--            /* Border and layout */-->
<!--            --fc-border-color: #d1d5db;-->
<!--            --fc-daygrid-event-dot-width: 8px;-->
<!--            --fc-event-border-width: 2px;-->
<!--            --fc-event-resizer-thickness: 8px;-->
<!---->
<!--            /* Background colors */-->
<!--            --fc-page-bg-color: #ffffff;-->
<!--            --fc-neutral-bg-color: rgba(208, 215, 222, 0.3);-->
<!--            --fc-today-bg-color: rgba(255, 220, 40, 0.15);-->
<!---->
<!--            /* Text colors */-->
<!--            --fc-neutral-text-color: #1f2937;-->
<!--            --fc-event-text-color: #ffffff;-->
<!---->
<!--            /* Button styling */-->
<!--            --fc-button-text-color: #1f2937;-->
<!--            --fc-button-bg-color: #f3f4f6;-->
<!--            --fc-button-border-color: #d1d5db;-->
<!--            --fc-button-hover-bg-color: #e5e7eb;-->
<!--            --fc-button-hover-border-color: #9ca3af;-->
<!--            --fc-button-active-bg-color: #d1d5db;-->
<!--            --fc-button-active-border-color: #9ca3af;-->
<!---->
<!--            /* Custom font sizes */-->
<!--            --fc-small-font-size: 0.75em;-->
<!--            --fc-event-font-size: 0.8em;-->
<!--        }-->
<!---->
<!--        #calendar {-->
<!--            max-width: 1200px;-->
<!--            margin: 0 auto;-->
<!--            padding: 20px;-->
<!--        }-->
<!---->
<!--        /* Override FullCalendar's daygrid event styling */-->
<!--        .fc-daygrid-event {-->
<!--            position: relative;-->
<!--            white-space: normal !important; /* Allow line breaks */-->
<!--            border-radius: 6px !important;-->
<!--            font-size: var(--fc-event-font-size) !important;-->
<!--            min-height: 65px !important;-->
<!--            padding: 4px 6px !important;-->
<!--            cursor: pointer;-->
<!--            transition: all 0.3s ease;-->
<!--            overflow: hidden;-->
<!--        }-->
<!---->
<!--        .fc-daygrid-event:hover {-->
<!--            transform: translateY(-2px);-->
<!--            box-shadow: 0 6px 12px rgba(0,0,0,0.2);-->
<!--            z-index: 999;-->
<!--        }-->
<!---->
<!--        /* Block event styling - for multi-line content */-->
<!--        .fc-daygrid-block-event .fc-event-time {-->
<!--            font-weight: bold;-->
<!--            font-size: 0.7em;-->
<!--            margin-bottom: 2px;-->
<!--            display: block;-->
<!--        }-->
<!---->
<!--        .fc-daygrid-block-event .fc-event-title {-->
<!--            padding: 1px 0;-->
<!--            font-size: 0.75em;-->
<!--            line-height: 1.2;-->
<!--            display: block;-->
<!--            white-space: normal;-->
<!--            overflow: visible;-->
<!--        }-->
<!---->
<!--        /* Custom event content structure */-->
<!--        .fc-event-main {-->
<!--            padding: 2px 4px !important;-->
<!--            height: 100%;-->
<!--            display: flex !important;-->
<!--            flex-direction: column !important;-->
<!--            justify-content: flex-start !important;-->
<!--        }-->
<!---->
<!--        .fc-event-main-frame {-->
<!--            height: 100% !important;-->
<!--            display: flex !important;-->
<!--            flex-direction: column !important;-->
<!--        }-->
<!---->
<!--        /* Shift type colors and styles */-->
<!--        .shift-telemetry {-->
<!--            background: linear-gradient(135deg, #4338ca, #5b21b6) !important;-->
<!--            border-color: #4338ca !important;-->
<!--            --fc-event-border-color: #4338ca;-->
<!--            --fc-event-bg-color: #4338ca;-->
<!--        }-->
<!---->
<!--        .shift-consultant {-->
<!--            background: linear-gradient(135deg, #15803d, #166534) !important;-->
<!--            border-color: #15803d !important;-->
<!--            --fc-event-border-color: #15803d;-->
<!--            --fc-event-bg-color: #15803d;-->
<!--        }-->
<!---->
<!--        .shift-attending {-->
<!--            background: linear-gradient(135deg, #b91c1c, #991b1b) !important;-->
<!--            border-color: #b91c1c !important;-->
<!--            --fc-event-border-color: #b91c1c;-->
<!--            --fc-event-bg-color: #b91c1c;-->
<!--        }-->
<!---->
<!--        /* Special states */-->
<!--        .shift-urgent {-->
<!--            animation: pulse 2s infinite;-->
<!--            box-shadow: 0 0 15px rgba(239, 68, 68, 0.6) !important;-->
<!--        }-->
<!---->
<!--        .shift-mine {-->
<!--            border: 3px solid #fbbf24 !important;-->
<!--            box-shadow: 0 0 12px rgba(251, 191, 36, 0.6) !important;-->
<!--        }-->
<!---->
<!--        .shift-overtime {-->
<!--            border-style: dashed !important;-->
<!--            border-width: 3px !important;-->
<!--        }-->
<!---->
<!--        .shift-overtime::after {-->
<!--            content: '‚è∞';-->
<!--            position: absolute;-->
<!--            top: 2px;-->
<!--            right: 4px;-->
<!--            font-size: 12px;-->
<!--        }-->
<!---->
<!--        @keyframes pulse {-->
<!--            0% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7); }-->
<!--            70% { box-shadow: 0 0 0 15px rgba(239, 68, 68, 0); }-->
<!--            100% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); }-->
<!--        }-->
<!---->
<!--        /* Custom line-by-line content styling */-->
<!--        .event-line-content {-->
<!--            display: flex;-->
<!--            flex-direction: column;-->
<!--            height: 100%;-->
<!--            font-size: 11px;-->
<!--            line-height: 1.2;-->
<!--            color: white;-->
<!--            padding: 2px 0;-->
<!--        }-->
<!---->
<!--        .event-shift-type-line {-->
<!--            font-weight: bold;-->
<!--            margin-bottom: 3px;-->
<!--            display: flex;-->
<!--            align-items: center;-->
<!--            font-size: 12px;-->
<!--        }-->
<!---->
<!--        .event-doctor-line {-->
<!--            margin-bottom: 3px;-->
<!--            font-size: 11px;-->
<!--            opacity: 0.95;-->
<!--            font-weight: 500;-->
<!--        }-->
<!---->
<!--        .event-time-line {-->
<!--            font-size: 10px;-->
<!--            opacity: 0.9;-->
<!--            font-weight: 400;-->
<!--            margin-top: auto;-->
<!--        }-->
<!---->
<!--        .event-icon {-->
<!--            margin-right: 4px;-->
<!--            font-size: 11px;-->
<!--        }-->
<!---->
<!--        /* Badge styling */-->
<!--        .badge.shift-telemetry { background-color: #4338ca; }-->
<!--        .badge.shift-consultant { background-color: #15803d; }-->
<!--        .badge.shift-attending { background-color: #b91c1c; }-->
<!---->
<!--        /* Responsive adjustments for different views */-->
<!--        .fc-timeGridWeek-view .event-line-content,-->
<!--        .fc-timeGridDay-view .event-line-content {-->
<!--            font-size: 12px;-->
<!--        }-->
<!---->
<!--        .fc-timeGridWeek-view .event-shift-type-line,-->
<!--        .fc-timeGridDay-view .event-shift-type-line {-->
<!--            font-size: 13px;-->
<!--        }-->
<!---->
<!--        .fc-timeGridWeek-view .event-doctor-line,-->
<!--        .fc-timeGridDay-view .event-doctor-line {-->
<!--            font-size: 12px;-->
<!--        }-->
<!---->
<!--        .fc-timeGridWeek-view .event-time-line,-->
<!--        .fc-timeGridDay-view .event-time-line {-->
<!--            font-size: 11px;-->
<!--        }-->
<!--    </style>-->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log('DOM loaded, initializing calendar...');

            var calendarEl = document.getElementById('calendar');
            if (!calendarEl) {
                console.error('Calendar element not found!');
                return;
            }


            // Get current user info
            var currentUser = '<?= $_SESSION['login'] ?? '' ?>';

            // Convert PHP schedules to JavaScript
            var schedules = <?php echo json_encode($view->schedules ?? [], JSON_HEX_TAG | JSON_HEX_AMP | JSON_HEX_APOS | JSON_HEX_QUOT); ?>;
            console.log('Raw schedules data:', schedules);

            function getShiftIcon(shiftType) {
                var type = (shiftType || '').toString().toLowerCase();
                switch(type) {
                    case 'telemetry': return 'ü©∫';
                    case 'consultant': return 'üë®‚Äç‚öïÔ∏è';
                    case 'attending': return 'üè•';
                    default: return 'üìã';
                }
            }

            function getColorForShiftType(shiftType) {
                var type = (shiftType || '').toString().toLowerCase();
                switch(type) {
                    case 'telemetry': return '#4338ca';
                    case 'consultant': return '#15803d';
                    case 'attending': return '#b91c1c';
                    default: return '#6b7280';
                }
            }

            function isShiftUrgent(start, end) {
                var now = new Date();
                var shiftStart = new Date(start);
                var timeDiff = shiftStart.getTime() - now.getTime();
                var hoursDiff = timeDiff / (1000 * 3600);

                return hoursDiff > 0 && hoursDiff < 2;
            }

            function isOvertimeShift(start, end) {
                var shiftStart = new Date(start);
                var shiftEnd = new Date(end);
                var duration = (shiftEnd - shiftStart) / (1000 * 3600);

                return duration > 10;
            }

            // Process the schedules for FullCalendar
            var events = [];

            if (schedules && Array.isArray(schedules) && schedules.length > 0) {
                events = schedules.map(function(schedule) {
                    console.log('Processing schedule:', schedule);

                    var shiftType = schedule.shiftType || 'Unknown';
                    var doctor = schedule.doctor || 'Unknown Doctor';
                    var start = schedule.start || null;
                    var end = schedule.end || null;
                    var id = schedule.id || Math.random();

                    if (!start) {
                        console.warn('Schedule missing start time:', schedule);
                        return null;
                    }

                    var isMyShift = doctor.toLowerCase() === currentUser.toLowerCase();
                    var isUrgent = isShiftUrgent(start, end);
                    var isOvertime = isOvertimeShift(start, end);

                    // Format times
                    var startTime = new Date(start).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                    var endTime = end ? new Date(end).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) : '';
                    var timeRange = startTime + (endTime ? ' - ' + endTime : '');
                    var icon = getShiftIcon(shiftType);



                    var event = {
                        id: id,
                        // Create title with line breaks for FullCalendar's default rendering
                        title: shiftType,
                        start: start,
                        end: end,
                        backgroundColor: getColorForShiftType(shiftType),
                        borderColor: getColorForShiftType(shiftType),
                        textColor: '#ffffff',

                        // Custom class names based on conditions
                        classNames: function(arg) {
                            var classes = ['shift-' + shiftType.toLowerCase()];

                            if (isMyShift) classes.push('shift-mine');
                            if (isUrgent) classes.push('shift-urgent');
                            if (isOvertime) classes.push('shift-overtime');

                            return classes;
                        },

                        // Custom content injection for line-by-line display
                        eventContent: function(arg) {
                            // Create main container
                            var contentEl = document.createElement('div');
                            contentEl.className = 'event-line-content';

                            // Line 1: Shift Type with Icon
                            var shiftTypeEl = document.createElement('div');
                            shiftTypeEl.className = 'event-shift-type-line';
                            shiftTypeEl.innerHTML = '<span class="event-icon">' + icon + '</span>' + shiftType;

                            // Line 2: Doctor Name
                            var doctorEl = document.createElement('div');
                            doctorEl.className = 'event-doctor-line';
                            doctorEl.textContent = doctor;

                            // Line 3: Time Range
                            var timeEl = document.createElement('div');
                            timeEl.className = 'event-time-line';
                            timeEl.textContent = timeRange;

                            // Append all lines
                            contentEl.appendChild(shiftTypeEl);
                            contentEl.appendChild(doctorEl);
                            contentEl.appendChild(timeEl);

                            return { domNodes: [contentEl] };
                        },

                        extendedProps: {
                            doctor: doctor,
                            shiftType: shiftType,
                            userId: schedule.userId || null,
                            isMyShift: isMyShift,
                            isUrgent: isUrgent,
                            isOvertime: isOvertime
                        }
                    };

                    console.log('Created event:', event);
                    return event;
                }).filter(function(event) {
                    return event !== null;
                });
            }

            console.log('Final events array:', events);

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                initialDate: new Date(),
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                displayEventTime: true,
                displayEventEnd: true,
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    meridiem: 'short'
                },

                events: events,

                // Event styling
                eventDisplay: 'block', // Force block display for better multi-line content
                eventMinHeight: 65,

                // Event click handler
                eventClick: function(info) {
                    showEventModal(info.event);
                },

                // Date click handler
                dateClick: function(info) {
                    console.log('Clicked on date: ' + info.dateStr);

                    var clickedDate = new Date(info.dateStr);
                    var today = new Date();
                    today.setHours(0, 0, 0, 0);

                    if (clickedDate >= today) {
                        if (confirm('Would you like to request a shift for ' + info.dateStr + '?')) {
                            console.log('Shift request for:', info.dateStr);
                            alert('Shift request feature coming soon!');
                        }
                    }
                },

                // Mouse enter handler for tooltips
                eventMouseEnter: function(info) {
                    var event = info.event;
                    var props = event.extendedProps;

                    var tooltipContent =
                        props.doctor + ' - ' + props.shiftType + '\n' +
                        'Start: ' + event.start.toLocaleString() + '\n' +
                        (event.end ? 'End: ' + event.end.toLocaleString() + '\n' : '') +
                        (props.isMyShift ? '‚≠ê Your shift' : '') +
                        (props.isUrgent ? ' üö® Starting soon!' : '') +
                        (props.isOvertime ? ' ‚è∞ Overtime' : '');

                    info.el.title = tooltipContent;
                },

                firstDay: 1,
                weekends: true,
                slotMinTime: '06:00:00',
                slotMaxTime: '22:00:00',
                height: 'auto',

                loading: function(bool) {
                    if (bool) {
                        console.log('Loading calendar...');
                    } else {
                        console.log('Calendar loaded with ' + events.length + ' events');
                    }
                },

                eventDidMount: function(info) {
                    console.log('Event mounted:', info.event.title);
                }
            });

            // Function to show event details in modal
            function showEventModal(event) {
                var props = event.extendedProps;
                var startTime = event.start ? event.start.toLocaleString() : 'N/A';
                var endTime = event.end ? event.end.toLocaleString() : 'N/A';

                var modalBody = document.getElementById('eventModalBody');
                var requestSwapBtn = document.getElementById('requestSwapBtn');

                var badges = '';
                if (props.isMyShift) badges += '<span class="badge bg-warning me-1">Your Shift</span>';
                if (props.isUrgent) badges += '<span class="badge bg-danger me-1">Urgent</span>';
                if (props.isOvertime) badges += '<span class="badge bg-info me-1">Overtime</span>';

                modalBody.innerHTML = `
            <div class="row">
                <div class="col-12 mb-3">
                    ${badges}
                </div>
                <div class="col-sm-6">
                    <strong>Doctor:</strong><br>
                    ${getShiftIcon(props.shiftType)} ${props.doctor}
                </div>
                <div class="col-sm-6">
                    <strong>Shift Type:</strong><br>
                    ${props.shiftType}
                </div>
                <div class="col-sm-6 mt-3">
                    <strong>Start Time:</strong><br>
                    ${startTime}
                </div>
                <div class="col-sm-6 mt-3">
                    <strong>End Time:</strong><br>
                    ${endTime}
                </div>
            </div>
        `;

                if (props.isMyShift) {
                    requestSwapBtn.style.display = 'block';
                    requestSwapBtn.onclick = function() {
                        console.log('Shift swap requested for shift ID:', event.id);
                        // alert('Shift swap request submitted!');
                        // var modalInstance = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
                        // if (modalInstance) {
                        //     modalInstance.hide();
                        // }
                        window.location.href = 'shiftSwap.php?id=' + event.id;
                    };
                } else {
                    requestSwapBtn.style.display = 'none';
                }

                var modal = new bootstrap.Modal(document.getElementById('eventModal'));
                modal.show();
            }

            // Dynamic handler for viewing only my shifts
            function toggleMyShiftsOnly() {
                var showOnlyMine = document.getElementById('showMyShifts').checked;

                if (showOnlyMine) {
                    var myEvents = events.filter(function(event) {
                        return event.extendedProps.isMyShift;
                    });
                    calendar.removeAllEvents();
                    calendar.addEventSource(myEvents);
                } else {
                    calendar.removeAllEvents();
                    calendar.addEventSource(events);
                }
            }

            try {
                calendar.render();
                console.log('Calendar rendered successfully');

                document.getElementById('showMyShifts').addEventListener('change', toggleMyShiftsOnly);

                if (events.length > 0) {
                    console.log('‚úì Calendar loaded with', events.length, 'shift(s)');
                } else {
                    console.log('‚ö† Calendar loaded but no shifts found');
                }
            } catch (error) {
                console.error('Error rendering calendar:', error);
                var errorDiv = document.createElement('div');
                errorDiv.className = 'alert alert-danger';
                errorDiv.innerHTML = 'Error loading calendar: ' + error.message;
                calendarEl.appendChild(errorDiv);
            }
        });
    </script>

<?php require('template/footer.phtml') ?>